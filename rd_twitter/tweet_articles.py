# -*- coding: latin-1 -*-
"""
*******************************************************************************
** Script Name: tweet_articles.py
** Author(s):   Terrence Beach (tjbeachjr@gmail.com)
*******************************************************************************

** Description:

The script will take the tweets stored in a text file called new_tweets.txt, 
which was generated by the build_tweets_from_alerts.py script.

*******************************************************************************
"""
import codecs
import os
import sys
import time
import tweepy
sys.path.append("libs")
import common


###############################################################################
# Globals
###############################################################################

# The time to wait between tweets (in hours)
TWEET_SHIFT = 8

# The first tweet to be sent
TWEET_GREETING = "Hello I will start tweeting now"

# The last tweet to be sent
TWEET_SIGN_OFF = "Goodbye I'm done tweeting for now"

# A list of stock tweets to inject inbetween article tweets
STOCK_TWEETS = [
    "This is stock tweet 1",
    "This is stock tweet 2"
]


###############################################################################
# Twitter account information for oAuthentication
###############################################################################

TWITTER_CONSUMER_KEY        = ""
TWITTER_CONSUMER_SECRET     = ""
TWITTER_ACCESS_TOKEN        = ""
TWITTER_ACCESS_TOKEN_SECRET = ""


###############################################################################
# Run the script when called from the command line
###############################################################################

def main():
    log = common.setup_logger("tweet_articles")
    
    # Log into the Twitter account
    log.info("Logging into Twitter account")
    auth = tweepy.OAuthHandler(TWITTER_CONSUMER_KEY, TWITTER_CONSUMER_SECRET)
    auth.set_access_token(TWITTER_ACCESS_TOKEN, TWITTER_ACCESS_TOKEN_SECRET)
    twitter_api = tweepy.API(auth)
    
    # Get the list of articles to tweet (if any)
    if not os.path.exists("new_tweets.txt"):
        log.error("new_tweets.txt is missing.  Please run build_new_tweets.py script first.")
        return
    infile = codecs.open("new_tweets.txt", "r", "utf8")
    articles = []
    for line in infile:
        article = line.rstrip()
        articles.append(article)
    
    # Build the list of tweets
    interval = len(articles) / len(STOCK_TWEETS)
    counter = 1
    tweets = [TWEET_GREETING]
    for article in articles:
        tweets.append(article)
        if counter == interval:
            if len(STOCK_TWEETS):
                tweets.append(STOCK_TWEETS.pop(0))
            counter = 1
        else:
            counter += 1
    tweets.append(TWEET_SIGN_OFF)
    
    # Tweet the articles
    log.info("Sending %i new tweets" % len(tweets))
    counter = 1
    wait_time = TWEET_SHIFT * 3600 / len(tweets)
    for tweet in tweets:
        try:
            log.info("Sending tweet %i - Tweet contents:" % counter)
            log.info(tweet)
            twitter_api.update_status(tweet)
        except:
            log.error("Problem sending tweet %i" % counter)
        counter += 1
        if counter == len(tweets):
            continue
        log.info("Waiting %i seconds before sending next tweet" % wait_time)
        time.sleep(wait_time)


if __name__ == "__main__":
    main()